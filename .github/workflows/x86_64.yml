name: x86_64

on:
  repository_dispatch:
  workflow_dispatch:

env:
  OPNAME: 'x86_64[Beta]'
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  LUCI_CONFIG: All
  CONFIG_FILE: configs/x86_64.config
  CONFIG_SH: configure.sh
  PACKS_SH: package.sh
  EXTEND_DRIVER: false
  OUTPUT_DIR: firmwares
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL https://raw.githubusercontent.com/bigbugcc/openwrts/master/openwrt-env)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Free Disk Space
      uses: jlumbroso/free-disk-space@main
      with:
        tool-cache: true
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        swap-storage: true

    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL --depth 1 -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Cache
      uses: klever1988/cachewrtbuild@main
      with:
          ccache: 'true'
          mixkey: 'x86'
          prefix: 'openwrt'

    - name: Load UserConfiguration
      run: |
        echo "🚀 Executing User Configuration Scripts "
        chmod +x configure.sh && chmod +x package.sh && chmod +x compile.sh
        mv configs/ compile.sh openwrt/
        cd openwrt
        $GITHUB_WORKSPACE/configure.sh
        $GITHUB_WORKSPACE/package.sh
        ls -al

    - name: Update and Install feeds
      run: |
        cd openwrt
        ./scripts/feeds update -a && ./scripts/feeds install -a
        
    - name: Compile the firmware
      id: compile
      run: cd openwrt && ./compile.sh

    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Generate release tag
      id: tag
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        echo "== Time：$(date +'%Y-%m-%d %H:%M:%S') =="
        echo "release_tag=$(date +"%Y.%m.%d-%H%M%S")" >> $GITHUB_OUTPUT
        touch release.txt
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Generate release body
      if: steps.compile.outputs.status == 'success' && !cancelled()
      run: |
        echo "![](https://img.shields.io/github/downloads/${{ github.repository }}/${{ steps.tag.outputs.release_tag }}/total?style=flat-square)" >> release.txt
        echo "测试固件请不要下载安装或升级!" >> release.txt
        echo "Please do not download, install or upgrade the test firmware !" >> release.txt

    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        name: ${{ env.OPNAME }}
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: ${{ env.OUTPUT_DIR }}/*
